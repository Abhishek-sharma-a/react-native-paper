"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[509],{4257:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>i});var p=o(7462),a=(o(7294),o(3905)),s=o(214);const n={title:"TouchableRipple"},r=void 0,l={unversionedId:"components/TouchableRipple",id:"components/TouchableRipple",title:"TouchableRipple",description:"A wrapper for views that should respond to touches.",source:"@site/docs/components/TouchableRipple.mdx",sourceDirName:"components",slug:"/components/TouchableRipple",permalink:"/react-native-paper/docs/components/TouchableRipple",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/docs/docs/components/TouchableRipple.mdx",tags:[],version:"current",frontMatter:{title:"TouchableRipple"},sidebar:"components",previous:{title:"Tooltip",permalink:"/react-native-paper/docs/components/Tooltip"},next:{title:"Text",permalink:"/react-native-paper/docs/components/Typography/Text"}},c={},i=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],u={toc:i};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,p.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'A wrapper for views that should respond to touches.\nProvides a material "ink ripple" interaction effect for supported platforms (>= Android Lollipop).\nOn unsupported platforms, it falls back to a highlight effect.'),(0,a.kt)("div",{class:"screenshots"},(0,a.kt)("figure",null,(0,a.kt)("img",{class:"small",src:"/react-native-paper/screenshots/touchable-ripple.gif"}))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <TouchableRipple\n    onPress={() => console.log('Pressed')}\n    rippleColor=\"rgba(0, 0, 0, .32)\"\n  >\n    <Text>Press anywhere</Text>\n  </TouchableRipple>\n);\n\nexport default MyComponent;\n")),(0,a.kt)("p",null,"@extends Pressable props ",(0,a.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/Pressable#props"},"https://reactnative.dev/docs/Pressable#props")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)(s.Z,{link:"TouchableRipple/TouchableRipple",mdxType:"PropTable"}))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3507],{6184:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(7462),r=(n(7294),n(3905)),s=n(214);const a={title:"HelperText"},p=void 0,i={unversionedId:"components/HelperText",id:"components/HelperText",title:"HelperText",description:"Helper text is used in conjuction with input elements to provide additional hints for the user.",source:"@site/docs/components/HelperText.mdx",sourceDirName:"components",slug:"/components/HelperText",permalink:"/react-native-paper/docs/components/HelperText",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/HelperText.mdx",tags:[],version:"current",frontMatter:{title:"HelperText"},sidebar:"components",previous:{title:"FAB.Group",permalink:"/react-native-paper/docs/components/FAB/FABGroup"},next:{title:"IconButton",permalink:"/react-native-paper/docs/components/IconButton"}},c={},l=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],u={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Helper text is used in conjuction with input elements to provide additional hints for the user."),(0,r.kt)("div",{class:"screenshots"},(0,r.kt)("img",{class:"small",src:"/react-native-paper/screenshots/helper-text.gif"})),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [text, setText] = React.useState('');\n\n   const onChangeText = text => setText(text);\n\n  const hasErrors = () => {\n    return !text.includes('@');\n  };\n\n return (\n    <View>\n      <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n      <HelperText type=\"error\" visible={hasErrors()}>\n        Email address is invalid!\n      </HelperText>\n    </View>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)(s.Z,{link:"HelperText",mdxType:"PropTable"}))}d.isMDXComponent=!0}}]);